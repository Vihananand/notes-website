<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Modern Notes App</title>
  <!-- Tailwind CSS CDN -->
  <script src="https://cdn.tailwindcss.com"></script>
  <!-- For Toast Notifications -->
  <script src="/toastify/toastify.js"></script>
  <!-- Google Fonts -->
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" type="text/css" href="/toastify/toastify.css">
  <!-- Custom Styles -->
  <style>
    body {
      font-family: 'Inter', sans-serif;
    }

    .note-form-container {
      transition: all 0.3s ease;
    }

    .form-input,
    .form-textarea {
      transition: all 0.2s ease-in-out;
    }

    .form-input:focus,
    .form-textarea:focus {
      box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.2);
    }

    .btn {
      transition: all 0.2s ease;
    }

    .nav-link {
      position: relative;
    }

    .nav-link::after {
      content: '';
      position: absolute;
      bottom: -2px;
      left: 50%;
      width: 0;
      height: 2px;
      background-color: #6366f1;
      transition: all 0.3s ease;
      transform: translateX(-50%);
    }

    .nav-link:hover::after {
      width: 100%;
    }

    .note-card {
      transition: all 0.3s ease;
    }

    .note-card:hover {
      transform: translateY(-2px);
    }
  </style>
</head>

<body class="bg-gray-50 min-h-screen">
  <!-- Navbar -->
  <nav class="bg-white shadow-sm">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="flex justify-between h-16">
        <div class="flex items-center">
          <!-- Logo -->
          <div class="flex-shrink-0 flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-indigo-600" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path>
              <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path>
            </svg>
            <span class="ml-2 text-xl font-bold text-gray-900">NotePro</span>
          </div>
        </div>

        <!-- Navigation Links -->
        <div class="flex justify-center space-x-8 items-center">
          <a href="#" class="nav-link text-gray-700 hover:text-indigo-600 transition-colors duration-200">Profile</a>
        </div>
      </div>
    </div>

    <!-- Main Content -->
    <main class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-10">
      <!-- Note Form -->
      <div class="note-form-container bg-white rounded-lg shadow-md overflow-hidden transform hover:shadow-lg transition-all duration-300 mb-10">
        <div class="px-6 py-5 bg-gradient-to-r from-indigo-600 to-purple-600">
          <h1 class="text-2xl font-bold text-white">Create New Note</h1>
          <p class="text-indigo-100 mt-1">Capture your thoughts and ideas</p>
        </div>

        <form action="/create" method="POST" class="p-6">
          <!-- Note Title -->
          <div class="flex flex-col">
            <div class="mb-3">
              <label for="title" class="block text-sm font-medium text-gray-700 mb-1">Note Title</label>
              <input type="text" id="title" name="title" placeholder="Enter a descriptive title..." class="form-input w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500" required>
            </div>
            <div class="mb-3 text-right text-sm text-gray-700"><span id="title-characters-written">0</span>/<span>30</span>
            </div>
          </div>


          <!-- Note Content -->
          <div class="flex flex-col">
            <div class="mb-3">
              <label for="content" class="block text-sm font-medium text-gray-700 mb-1">Note Content</label>
              <textarea id="content" name="content" rows="8" placeholder="Write your note here..." class="form-textarea w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500" required></textarea>
            </div>
            <div class="mb-3 text-right text-sm text-gray-700"><span id="content-characters-written">0</span>/<span>500</span>
            </div>
          </div>


          <!-- Submit Button -->
          <div class="flex justify-between items-center">
            <p id="error-message" class="text-red-600"></p>
            <button id="submit-button" type="submit" class="btn inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transform hover:translate-y-[-1px] active:translate-y-[1px]">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z"></path>
                <polyline points="17 21 17 13 7 13 7 21"></polyline>
                <polyline points="7 3 7 8 15 8"></polyline>
              </svg>
              Save Note
            </button>
          </div>
        </form>
      </div>

      <!-- Notes Grid -->
      <div class="space-y-6">
        <h2 class="text-2xl font-bold text-gray-900">Your Notes</h2>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <% if (files && files.length> 0) { %>
          <% files.forEach(file=> { %>
          <div class="note-card bg-white rounded-lg shadow-md overflow-hidden relative">
            <!-- Delete Button (Top-right corner) -->
            <form action="/delete" method="POST" class="absolute top-2 right-2 z-10">
              <input type="hidden" name="title" value="<%= file.title %>">
              <button type="submit" title="Delete Note" class="text-gray-400 hover:text-red-500 transition-colors duration-200">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6M9 7h6m-6 0V4a1 1 0 011-1h4a1 1 0 011 1v3" />
                </svg>
              </button>
            </form>

            <!-- Note content -->
            <div class="p-6">
              <h3 class="text-lg font-semibold text-gray-900 mb-2">
                <%= file.title %>
              </h3>
              <p class="note-preview line-clamp-3 transition-all duration-300 ease-in-out overflow-hidden">
                <%= file.content %>
              </p>
              <button type="button" class="toggle-btn text-indigo-600 hover:text-indigo-700 font-medium mt-2">Read
                More</button>
            </div>
          </div>

          <% }); %>
          <% } else { %>
          <div class="col-span-2 text-center py-12">
            <svg xmlns="http://www.w3.org/2000/svg" class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
            </svg>
            <h3 class="mt-2 text-sm font-medium text-gray-900">No notes yet</h3>
            <p class="mt-1 text-sm text-gray-500">Get started by creating a new note above.
            </p>
          </div>
          <% } %>
        </div>
      </div>
    </main>

    <!-- Footer -->
    <footer class="mt-10 bg-white border-t border-gray-200">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
        <p class="text-center text-gray-500 text-sm">Â© 2025 NotePro. All rights reserved.</p>
      </div>
    </footer>

    <!-- JavaScript to toggle mobile menu -->
    <script>
      const title = document.getElementById('title');
      const content = document.getElementById('content');
      const errorMessage = document.getElementById('error-message');
      const submitButton = document.getElementById('submit-button');
      const titleCharactersWritten = document.getElementById('title-characters-written');
      const contentCharactersWritten = document.getElementById('content-characters-written');
      const specialChars = /[^a-zA-Z0-9]/;

      content.addEventListener("input", () => {
        const contentLen = content.value.length;
        contentCharactersWritten.textContent = contentLen;
        if (contentLen > 500) {
          errorMessage.textContent = "Characters limit exceeded!!";
          submitButton.classList.add('hidden');
        } else {
          errorMessage.textContent = "";
          submitButton.classList.remove('hidden');
        }
      });

      title.addEventListener("input", () => {
        const titleLen = title.value.length;
        titleCharactersWritten.textContent = titleLen;

        if (titleLen > 30) {
          errorMessage.textContent = "Characters limit exceeded!!";
          submitButton.classList.add('hidden');
        } else if (specialChars.test(title.value)) {
          errorMessage.textContent = "Special Characters are not allowed in the title"
          submitButton.classList.add('hidden');
        } else {
          errorMessage.textContent = "";
          submitButton.classList.remove('hidden');
        }
      })

      document.addEventListener('DOMContentLoaded', () => {
        const menuButton = document.querySelector('button');
        const mobileMenu = document.querySelector('.sm\\:hidden.bg-white');
        const toggleButtons = document.querySelectorAll('.toggle-btn');

        menuButton.addEventListener('click', () => {
          mobileMenu.classList.toggle('hidden');
        });

        toggleButtons.forEach(btn => {
          btn.addEventListener('click', () => {
            const preview = btn.previousElementSibling;

            preview.classList.toggle('line-clamp-3');

            if (btn.textContent === "Show Less") {
              btn.textContent = "Read More";
            } else {
              btn.textContent = "Show Less";
            }
          });
        });
      });
    </script>

    <script>
      const urlParams = new URLSearchParams(window.location.search);
      if (urlParams.get('created')) {
        Toastify({
          text: "â Note Created Successfully!",
          duration: 3000,
          gravity: "top",
          position: "center",
          backgroundColor: "#4f46e5",
          stopOnFocus: false,
        }).showToast();
      } else if (urlParams.get('deleted')) {
        Toastify({
          text: "ðï¸ Note Deleted Successfully!",
          duration: 3000,
          gravity: "top",
          position: "center",
          backgroundColor: "#4f46e5",
          stopOnFocus: false,
        }).showToast();
      }
    </script>

</body>

</html>